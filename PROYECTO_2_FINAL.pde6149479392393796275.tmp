// The Nature of Code
// <http://www.shiffman.net/teaching/nature>
// Spring 2010
// Box2DProcessing example

int tiempoDesdeInicio=second();
int tiempoTranscurrido=second();


PImage photo; 
PImage img;
PImage arbol;
int puntos ;



// Basic example of controlling an object with our own motion (by attaching a MouseJoint)
// Also demonstrates how to know which object was hit

import shiffman.box2d.*;
import org.jbox2d.common.*;
import org.jbox2d.dynamics.joints.*;
import org.jbox2d.collision.shapes.*;
import org.jbox2d.collision.shapes.Shape;
import org.jbox2d.common.*;
import org.jbox2d.dynamics.*;
import org.jbox2d.dynamics.contacts.*;

// A reference to our box2d world
Box2DProcessing box2d;

// Just a single box this time
criatuta criatuta;

// An ArrayList of particles that will fall on the surface
ArrayList<dulces> dulces;

// The Spring that will attach to the box from the mouse
Spring spring;

// Perlin noise values
float xoff = 0;
float yoff = 1000;


void setup() {
 
  size(600,500);
  smooth();

photo = loadImage("1.2.png");
img = loadImage("2.png");
arbol =loadImage("rama.png");
  // Initialize box2d physics and create the world
  
  
  box2d = new Box2DProcessing(this);
  box2d.createWorld();

  // Add a listener to listen for collisions!
  box2d.world.setContactListener(new CustomListener());

  // Make the box
criatuta = new criatuta(width/2,height/2);

  // Make the spring (it doesn't really get initialized until the mouse is clicked)
  spring = new Spring();
  spring.bind(width/2,height/2,criatuta);

  // Create the empty list
 dulces = new ArrayList<dulces>();


}

void draw() {
  background(#B9DAE3);
  
   fill(#FF76CF);
  rect(100,420,160,30);
  
    fill(#FF76CF);
  rect(460,420,110,30);
  
   tiempoTranscurrido = second()- tiempoDesdeInicio ;
  if (tiempoDesdeInicio > 0){
    fill(0);
    textSize(20);
    text(tiempoTranscurrido,480,430);
    
    
  }
    fill(0);
  textSize(13);
  text("Tiempo:",415,430);
  
 image( arbol,-10, -200);

  if (random(1) < 0.2) {
    float sz = random(4,8);
    dulces.add(new dulces(width/2,-20,sz));
  }


  // We must always step through time!
  box2d.step();

  // Make an x,y coordinate out of perlin noise
 // float x = noise(xoff)*width;
 // float y = noise(yoff)*height;
 // xoff += 0.01;
 // yoff += 0.01;

  // This is tempting but will not work!
  // box.body.setXForm(box2d.screenToWorld(x,y),0);

  // Instead update the spring which pulls the mouse along
  if (mousePressed) {
    spring.update(mouseX,mouseY);
  } else {
    //spring.update(x,y);
  }
  //box.body.setAngularVelocity(0);

  // Look at all particles
  for (int i = dulces.size()-1; i >= 0; i--) {
    dulces p = dulces.get(i);
    p.display();
    // Particles that leave the screen, we delete them
    // (note they have to be deleted from both the box2d world and our list
    if (p.done()) {
      dulces.remove(i);
    }
  }

  // Draw the box
  criatuta.display();

  // Draw the spring
  // spring.display();
  
  fill(0);
  textSize(13);
  text("Puntos:",50,430);
 
}

void mousePressed(){
 tiempoTranscurrido = second();
}